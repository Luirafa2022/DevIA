5. Utilizando Python em um Mac
******************************

Autor:
   Bob Savage <bobsavage@mac.com>

Python on a Mac running macOS is in principle very similar to Python
on any other Unix platform, but there are a number of additional
features such as the integrated development environment (IDE) and the
Package Manager that are worth pointing out.


5.1. Getting and Installing Python
==================================

macOS used to come with Python 2.7 pre-installed between versions 10.8
and 12.3. You are invited to install the most recent version of Python
3 from the Python website. A current "universal2 binary" build of
Python, which runs natively on the Mac's new Apple Silicon and legacy
Intel processors, is available there.

O que você obtém após a instalação é uma série de coisas:

* A "Python 3.12" folder in your "Applications" folder. In here you
  find IDLE, the development environment that is a standard part of
  official Python distributions; and **Python Launcher**, which
  handles double-clicking Python scripts from the Finder.

* A framework "/Library/Frameworks/Python.framework", which includes
  the Python executable and libraries. The installer adds this
  location to your shell path. To uninstall Python, you can remove
  these three things. A symlink to the Python executable is placed in
  "/usr/local/bin/".

Nota:

  On macOS 10.8-12.3, the Apple-provided build of Python is installed
  in "/System/Library/Frameworks/Python.framework" and
  "/usr/bin/python", respectively. You should never modify or delete
  these, as they are Apple-controlled and are used by Apple- or third-
  party software.  Remember that if you choose to install a newer
  Python version from python.org, you will have two different but
  functional Python installations on your computer, so it will be
  important that your paths and usages are consistent with what you
  want to do.

IDLE includes a Help menu that allows you to access Python
documentation. If you are completely new to Python you should start
reading the tutorial introduction in that document.

Se você está familiarizado com o Python em outras plataformas Unix,
leia a seção sobre a execução de scripts Python no shell do Unix.


5.1.1. Como executar um script Python
-------------------------------------

Your best way to get started with Python on macOS is through the IDLE
integrated development environment; see section A IDE and use the Help
menu when the IDE is running.

If you want to run Python scripts from the Terminal window command
line or from the Finder you first need an editor to create your
script. macOS comes with a number of standard Unix command line
editors, **vim** **nano** among them. If you want a more Mac-like
editor, **BBEdit** from Bare Bones Software (see
https://www.barebones.com/products/bbedit/index.html) are good
choices, as is **TextMate** (see https://macromates.com). Other
editors include **MacVim** (https://macvim.org) and **Aquamacs**
(https://aquamacs.org).

Para executar seu script a partir da janela do Terminal, você deve se
certificar de que "/usr/local/bin" esteja no seu caminho de pesquisa
do shell.

Para executar seu script no Finder, você tem duas opções:

* Drag it to **Python Launcher**.

* Select **Python Launcher** as the default application to open your
  script (or any ".py" script) through the finder Info window and
  double-click it. **Python Launcher** has various preferences to
  control how your script is launched. Option-dragging allows you to
  change these for one invocation, or use its Preferences menu to
  change things globally.


5.1.2. Executando scripts como uma GUI
--------------------------------------

Nas versões mais antigas do Python, há uma peculiaridade do macOS que
você precisa conhecer: os programas que conversam com o gerenciador de
janelas Aqua (em outras palavras, qualquer coisa que tenha uma GUI)
precisam ser executados de uma maneira especial. Use **pythonw** em
vez de **python** para iniciar esses scripts.

Com o Python 3.9, você pode usar **python** ou **pythonw**.


5.1.3. Configuração
-------------------

Python on macOS honors all standard Unix environment variables such as
"PYTHONPATH", but setting these variables for programs started from
the Finder is non-standard as the Finder does not read your ".profile"
or ".cshrc" at startup. You need to create a file
"~/.MacOSX/environment.plist". See Apple's Technical Q&A QA1067 for
details.

For more information on installation Python packages, see section
Instalando pacotes adicionais ao python.


5.2. A IDE
==========

Python ships with the standard IDLE development environment. A good
introduction to using IDLE can be found at
https://www.hashcollision.org/hkn/python/idle_intro/index.html.


5.3. Instalando pacotes adicionais ao python
============================================

Esta seção foi movida para o Guia de Usuário para Empacotamento de
Python.


5.4. GUI Programming
====================

Existem várias opções para criar aplicações GUI no Mac com Python.

*PyObjC* é uma ligação do Python para o framework Objective-C/Cocoa da
Apple, que é a base do desenvolvimento mais moderno do Mac.
Informações sobre PyObjC estão disponíveis em
https://pypi.org/project/pyobjc/.

O kit de ferramentas de GUI padrão do Python é "tkinter", baseado no
kit de ferramentas plataforma cruzada Tk (https://www.tcl.tk). Uma
versão nativa do Aqua do Tk é fornecida com o macOS da Apple, e a
versão mais recente pode ser baixada e instalada em
https://www.activestate.com; também pode ser construído a partir do
código-fonte.

*wxPython* é outro popular kit de ferramentas de GUI multiplataforma
que funciona nativamente no macOS. Pacotes e documentação estão
disponíveis em https://www.wxpython.org.

*PyQt* é outro popular kit de ferramentas de GUI multiplataforma que
funciona nativamente no macOS. Mais informações podem ser encontradas
em https://riverbankcomputing.com/software/pyqt/intro.

*PySide* is another cross-platform Qt-based toolkit. More information
at https://www.qt.io/qt-for-python.


5.5. Distributing Python Applications
=====================================

The standard tool for deploying standalone Python applications on the
Mac is **py2app**. More information on installing and using **py2app**
can be found at https://pypi.org/project/py2app/.


5.6. Outros recursos
====================

The Pythonmac-SIG mailing list is an excellent support resource for
Python users and developers on the Mac:

https://www.python.org/community/sigs/current/pythonmac-sig/

Outro recurso útil é o wiki do MacPython:

https://wiki.python.org/moin/MacPython
